:root {
    --bg-color: #1a1a1a;
    --text-color: #e0e0e0;
    --border-color: #333;
    --hover-color: #2a2a2a;
    --accent-color: #4a4a4a;
    --cell-size: min(100px, 25vw); /* Responsive cell size */
    --footer-border: #2d2d2d;
    --x-color: #6c8bff;
    --o-color: #ff6c8b;
    --win-color: #4ade80;
    --active-btn: #6c8bff;
    --container-width: min(600px, 95vw);
    --button-width: min(200px, 80vw);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Page Load Animation */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes scaleIn {
    from { transform: scale(0.95); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}

@keyframes markerPlace {
    0% { transform: scale(1.4); opacity: 0; }
    70% { transform: scale(1.1); }
    100% { transform: scale(1); opacity: 1; }
}

@keyframes winPulse {
    0% { background-color: rgba(74, 222, 128, 0); }
    50% { background-color: rgba(74, 222, 128, 0.2); }
    100% { background-color: rgba(74, 222, 128, 0); }
}

body {
    font-family: 'Segoe UI', system-ui, sans-serif;
    background-color: var(--bg-color);
    color: var(--text-color);
    line-height: 1.6;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
}

.container {
    width: var(--container-width);
    padding: clamp(1rem, 3vw, 2rem);
    text-align: center;
    animation: fadeIn 0.8s ease-out;
}

header {
    margin-bottom: clamp(1.5rem, 4vw, 2rem);
    animation: fadeIn 0.8s ease-out 0.2s backwards;
}

h1 {
    font-size: clamp(2rem, 5vw, 2.5rem);
    font-weight: 300;
    margin-bottom: 1rem;
    position: relative;
    display: inline-block;
}

h1::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--x-color), var(--o-color));
    transform: scaleX(0);
    transform-origin: left;
    animation: scaleIn 0.8s ease-out 0.8s forwards;
}

.player-setup {
    margin-bottom: clamp(1.5rem, 4vw, 2rem);
    animation: fadeIn 0.8s ease-out 0.4s backwards;
}

.player-inputs {
    display: flex;
    gap: clamp(0.5rem, 2vw, 1rem);
    justify-content: center;
    margin-bottom: 1rem;
    flex-wrap: wrap;
}

.input-group {
    display: flex;
    flex-direction: column;
    align-items: start;
    width: 100%;
    max-width: 250px;
}

input[type="text"] {
    background: var(--accent-color);
    border: 1px solid var(--border-color);
    color: var(--text-color);
    padding: 0.5rem;
    border-radius: 4px;
    margin: 0.5rem 0;
    width: 100%;
    font-size: clamp(0.9rem, 2.5vw, 1rem);
    transition: all 0.3s ease;
}

input[type="text"]:focus {
    outline: none;
    border-color: var(--x-color);
    box-shadow: 0 0 0 2px rgba(108, 139, 255, 0.1);
}

button {
    width: var(--button-width);
    max-width: 200px;
    font-size: clamp(0.9rem, 2.5vw, 1rem);
    background: var(--accent-color);
    color: var(--text-color);
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 150%;
    height: 150%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.5s ease;
}

button:hover::after {
    transform: translate(-50%, -50%) scale(1);
}

button:hover {
    background-color: var(--hover-color);
    transform: translateY(-1px);
}

button:active {
    transform: translateY(1px);
}

.game-status {
    margin: clamp(0.5rem, 2vw, 1rem) 0;
    min-height: 2rem;
    font-size: clamp(1rem, 3vw, 1.2rem);
    animation: fadeIn 0.8s ease-out 0.6s backwards;
}

.game-board {
    display: flex;
    justify-content: center;
    margin: clamp(1rem, 4vw, 2rem) 0;
    animation: fadeIn 0.8s ease-out 0.8s backwards;
}

.board {
    display: grid;
    grid-template-columns: repeat(3, var(--cell-size));
    grid-template-rows: repeat(3, var(--cell-size));
    gap: min(5px, 1vw);
    background-color: var(--border-color);
    padding: min(5px, 1vw);
    border-radius: 8px;
    transform: perspective(1000px) rotateX(0deg);
    transition: transform 0.3s ease;
}

.board:hover {
    transform: perspective(1000px) rotateX(5deg);
}

.cell {
    background-color: var(--bg-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: clamp(2rem, 8vw, 3rem);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.cell:hover:not(.disabled) {
    background-color: var(--hover-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.cell:active:not(.disabled) {
    transform: translateY(0);
}

.cell.x, .cell.o {
    animation: markerPlace 0.3s ease-out forwards;
}

.cell.x {
    color: var(--x-color);
}

.cell.o {
    color: var(--o-color);
}

.cell.win {
    animation: winPulse 1.5s ease-in-out infinite;
}

.cell.disabled {
    cursor: not-allowed;
    opacity: 0.8;
}

.game-controls {
    margin-top: clamp(1.5rem, 4vw, 2rem);
    animation: fadeIn 0.8s ease-out 1s backwards;
}

#restart-game {
    opacity: 0.8;
}

#restart-game:hover {
    opacity: 1;
}

/* Footer Styles */
.footer-section {
    margin-top: clamp(2rem, 6vw, 4rem);
    padding-top: clamp(1rem, 3vw, 2rem);
    border-top: 1px solid var(--footer-border);
    animation: fadeIn 0.8s ease-out 1.2s backwards;
}

footer {
    font-size: clamp(0.8rem, 2.5vw, 0.9rem);
    color: #888;
    transition: color 0.3s ease;
    padding: 0 1rem;
}

footer:hover {
    color: var(--text-color);
}

footer .heart {
    color: #ff6b6b;
    display: inline-block;
    animation: heartbeat 1.5s ease-in-out infinite;
}

footer a {
    color: #6c8bff;
    text-decoration: none;
    transition: all 0.3s ease;
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-weight: bold;
}

footer a:hover {
    color: #8ca3ff;
    background-color: rgba(108, 139, 255, 0.1);
}

/* Heartbeat Animation */
@keyframes heartbeat {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Game Mode Selection */
.game-mode-selection {
    margin-bottom: clamp(1.5rem, 4vw, 2rem);
    animation: fadeIn 0.8s ease-out 0.3s backwards;
}

.game-mode-selection h2 {
    font-size: clamp(1.2rem, 4vw, 1.5rem);
    font-weight: 300;
    margin-bottom: 1rem;
}

.game-mode-selection h3 {
    font-size: clamp(1rem, 3.5vw, 1.2rem);
    font-weight: 300;
    margin: 1.5rem 0 1rem;
}

.mode-buttons, .difficulty-buttons {
    display: flex;
    gap: clamp(0.5rem, 2vw, 1rem);
    justify-content: center;
    margin-bottom: 1rem;
    flex-wrap: wrap;
}

.mode-btn, .difficulty-btn {
    padding: 0.5rem 1.5rem;
    border-radius: 20px;
    background: var(--accent-color);
    border: 2px solid transparent;
    transition: all 0.3s ease;
    width: var(--button-width);
    max-width: 150px;
    font-size: clamp(0.9rem, 2.5vw, 1rem);
}

.mode-btn.active, .difficulty-btn.active {
    background: transparent;
    border-color: var(--active-btn);
    color: var(--active-btn);
}

.mode-btn:hover, .difficulty-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(108, 139, 255, 0.2);
}

.ai-settings {
    animation: fadeIn 0.3s ease-out;
}

.difficulty-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
}

.difficulty-btn {
    font-size: 0.9rem;
    padding: 0.4rem 1rem;
}

.difficulty-btn[data-difficulty="easy"] {
    --btn-color: #4ade80;
}

.difficulty-btn[data-difficulty="medium"] {
    --btn-color: #facc15;
}

.difficulty-btn[data-difficulty="hard"] {
    --btn-color: #fb923c;
}

.difficulty-btn[data-difficulty="impossible"] {
    --btn-color: #ef4444;
}

.difficulty-btn.active {
    border-color: var(--btn-color);
    color: var(--btn-color);
}

/* Mobile-first breakpoints */
@media (max-width: 480px) {
    :root {
        --cell-size: min(80px, 28vw);
    }

    .container {
        padding: 0.5rem;
    }

    .mode-buttons, .difficulty-buttons {
        flex-direction: column;
        align-items: center;
    }

    .mode-btn, .difficulty-btn {
        max-width: 100%;
    }

    .player-inputs {
        flex-direction: column;
        align-items: center;
    }

    .input-group {
        width: 100%;
    }

    button {
        width: 100%;
        max-width: none;
    }
}

@media (min-width: 481px) and (max-width: 768px) {
    :root {
        --cell-size: min(90px, 25vw);
    }

    .mode-btn, .difficulty-btn {
        max-width: 180px;
    }
}

@media (min-width: 769px) {
    .board:hover {
        transform: perspective(1000px) rotateX(5deg);
    }
}
